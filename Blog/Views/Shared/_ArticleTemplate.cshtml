@model Blog.ViewModels.ArticleViewModel

<div class="article">
    <h3>@Html.ActionLink(Model.Title, "Article", "Articles", new { id = Model.Alias }, null)</h3>
    <div class="article-info">
        <div class="info-left">
            <span class="glyphicon glyphicon-time" style="margin: 2px 5px 0 0;"></span> @Model.PublishDate
        </div>
        <div class="info-right">
            <span class="glyphicon glyphicon-list-alt" style="margin: 2px 5px 0 0;"></span> @Html.ActionLink(Model.CategoryName, "Category", "Categories", new { id = Model.CategoryAlias }, null)
        </div>
    </div>

    <div class="comments-info">
        <div style="position: relative;">
            <span class="glyphicon glyphicon-comment" style="margin: 0px 5px 0 0; font-size: 2.5em; position: relative; color: rgb(35, 49, 71); ">
            </span>
        </div>
        <div style="position: absolute; color: white; top: 0; left: 0; width: 35px; height: 25px; text-align: center; padding: 3px; font-size: 1.2em;">
            @Model.Comments.Count
        </div>
    </div>

    <div class="article-content">
        @Html.Raw(Model.Content)
    </div>

    <div class="article-actions">
        <div class="tags">
            @for (int x = 0; x < Model.Tags.Count; x++)
            {
                <div class="single-tag">@Html.ActionLink("#" + Model.Tags[x], "Tag", "Tags", new { id =Model.Tags[x]}, new { @class = "single-tag" })</div>
            }
        </div>
        <div class="read-more">
            @if (Model.IsReadMode)
            {
                @Html.ActionLink("Czytaj dalej...", "Article", "Articles", new { id = Model.Alias }, null)
            }
            else if(!Model.CommentsView)
            {
                @Html.ActionLink("Skomentuj wpis", "Article", "Articles", null, null, "comments", new { id = Model.Alias }, null)
            }
        </div>
    </div>
</div>

@if(Model.CommentsView)
{
    <div class="comments-area" id="comments">

        @for (int i = 0; i < Model.Comments.Count; i++)
        {
        <div class="single-comment-area" id="@Model.Comments[i].ID">
            <div class="comment-header">
                <div class="comment-author">
                    @if (Model.Comments[i].AuthorSite == null || Model.Comments[i].AuthorSite == "undefined")
                    {
                         @Model.Comments[i].AuthorName
                    }
                    else
                    {
                         <a href="@Model.Comments[i].AuthorSite">@Model.Comments[i].AuthorName</a>
                    }
                   
                </div>
                <div class="comment-date">  
                    @Model.Comments[i].PublishDate
                    @if(Model.Comments[i].AuthorID == WebSecurity.CurrentUserId && WebSecurity.IsAuthenticated)
                    {
                        @Html.ActionLink("[Usuń]", "RemoveComment", "Comments", new { id = Model.Comments[i].ID, articleID = Model.ID }, new { onclick = "return confirmOperation()" })
                    }
                </div>
            </div>
            <div class="comment-avatar">
                <img src="@Model.Comments[i].AvatarSource" alt="avatar"/>
            </div>
            <div class="comment-content">
                @Model.Comments[i].Content
            </div>
        </div>
        }
        
    </div>

    <div class="single-comment-area">
        <div class="comments-reply-area">
            @using (Html.BeginForm("AddComment", "Comments", new { returnUrl = ViewBag.ReturnUrl, target = Blog.Models.CommentTarget.Article }))
            {
                <input type="hidden" name="ArticleID" value="@Model.ID" />
                <textarea class="form-control" name="CommentContent"></textarea>
                <input type="submit" value="Dodaj komentarz" class="btn btn-default left"/>
                @Html.ActionLink("Pobierz w formacie ATOM", "GetCommentsATOM", "Home", new { id = Model.ID }, new { @class = "btn btn-default right" })
            }
        </div>
    </div>
}