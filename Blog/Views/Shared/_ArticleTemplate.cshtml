@model Blog.ViewModels.ArticleViewModel

<div class="post">
    <h2>@Html.ActionLink(Model.Title, "Article", "Articles", new { id = Model.Alias }, null)</h2>
    <p class="postmeta">Kategoria: @Html.ActionLink(Model.CategoryName, "Category", "Categories", new { id = Model.CategoryAlias }, null)
                                 | @Model.PublishDate | @Html.ActionLink(Model.CommentsCount + " komentarzy", "Article", "Articles", null, null, "comments", new { id = Model.Alias }, null) | Tagi:
        @for (int x = 0; x < Model.Tags.Count; x++)
        {
            if(x != 0)
            {
@:,
            }
            @Html.ActionLink(Model.Tags[x], "Tag", "Tags", new { id = Model.Tags[x] }, new { @class = "single-tag" })
        }
    </p>

    <div class="entry">
        @Html.Raw(Model.Content)
        
        
        @if (Model.IsReadMode)
        {
            <p>@Html.ActionLink("Czytaj dalej...", "Article", "Articles", new { id = Model.Alias }, new{ @class="btn btn-primary", style="float:right;"})</p>
        }
        else if (!Model.CommentsView)
        {
            <p>@Html.ActionLink("Skomentuj wpis", "Article", "Articles", null, null, "comments", new { id = Model.Alias }, new { @class = "btn btn-primary", style = "float:right;" })</p>
        }
    </div>
</div>

@if(Model.CommentsView)
{
    @Html.Action("Comments", "Modules", new { id = Model.ID, target = Blog.Models.TargetType.Article})
}

@*<div class="article">
    <h3>@Html.ActionLink(Model.Title, "Article", "Articles", new { id = Model.Alias }, null)</h3>
    <div class="article-info">
        <div class="info-left">
            <span class="glyphicon glyphicon-time" style="margin: 2px 5px 0 0;"></span> @Model.PublishDate
        </div>
        <div class="info-right">
            <span class="glyphicon glyphicon-list-alt" style="margin: 2px 5px 0 0;"></span> @Html.ActionLink(Model.CategoryName, "Category", "Categories", new { id = Model.CategoryAlias }, null)
        </div>
    </div>

    <div class="comments-info">
        <div style="position: relative;">
            <span class="glyphicon glyphicon-comment" style="margin: 0px 5px 0 0; font-size: 2.5em; position: relative; color: rgb(35, 49, 71); ">
            </span>
        </div>
        <div style="position: absolute; color: white; top: 0; left: 0; width: 35px; height: 25px; text-align: center; padding: 3px; font-size: 1.2em;">
            @Model.CommentsCount
        </div>
    </div>

    <div class="article-content">
        @Html.Raw(Model.Content)
    </div>

    <div class="article-actions">
        <div class="tags">
            @for (int x = 0; x < Model.Tags.Count; x++)
            {
                <div class="single-tag">@Html.ActionLink("#" + Model.Tags[x], "Tag", "Tags", new { id = Model.Tags[x] }, new { @class = "single-tag" })</div>
            }
        </div>
        <div class="read-more">
            @if (Model.IsReadMode)
            {
                @Html.ActionLink("Czytaj dalej...", "Article", "Articles", new { id = Model.Alias }, null)
            }
            else if (!Model.CommentsView)
            {
                @Html.ActionLink("Skomentuj wpis", "Article", "Articles", null, null, "comments", new { id = Model.Alias }, null)
            }
        </div>
    </div>
</div>

@if (Model.CommentsView)
{
    @Html.Action("Comments", "Modules", new { id = Model.ID, target = Blog.Models.TargetType.Article })
}*@